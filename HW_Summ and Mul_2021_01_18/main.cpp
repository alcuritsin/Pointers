/*
TODO:
1. Написать функцию
	int Sum(int n, ...);
с произвольным числом параметров, которая будет возвращать сумму всех переданных в нее значений;

2. Написать функцию
	int Mul(int n, ...);
с произвольным числом параметров, которая будет возвращать произведение всех переданных в нее значений;
*/

#include<iostream>
#include <stdarg.h> //Библиотека необходима для работы макросов va_arg(), va_start() и va_end()

#define DELIMETR std::cout << "=====================================\n"

int Sum(int, ...); //С помощью указателя
int Sum_series(int, ...); //С помощью макросов va_arg(), va_start() и va_end()

int Mul(int, ...); //С помощью указателя
int Mul_series(int, ...); //С помощью макросов va_arg(), va_start() и va_end()


void main()
{
	//Скомпилировать в x86
	//Потом скомпилировать в x64

	setlocale(LC_ALL, "Russian");
	
	std::cout << "Сумма - sum" << std::endl;
	DELIMETR;
	std::cout<< "Сумма серии (с помощью указателя) равна \t" << Sum(3,10,20,30) << std::endl; //С помощью указателя
	std::cout<< "Сумма серии (с помощью макросов va_arg(), va_start() и va_end()) равна\t" << Sum_series(3, 10, 20, 30) <<std::endl; //С помощью макросов
	std::cout << std::endl;

	std::cout << "Произведение - multiplication" << std::endl;
	DELIMETR;
	std::cout<< "Произведение серии (с помощью макросов va_arg(), va_start() и va_end()) равна\t" << Mul_series(3, 10, 20, 30) <<std::endl; //С помощью макросов
	std::cout<< "Произведение серии (с помощью указателя) равна \t" << Mul(3,10,20,30) << std::endl; //С помощью указателя
	std::cout << std::endl;
}

int Sum(int n, ...) //С помощью указателя
{//Первый аргумент содержит счетчик числа аргументов, которые будут переданы функции.
	//Warning!!! Не корректно работает в x64
	int s = 0;
	for (int i = 1; i <= n; ++i) {
		s += *((&n)+i);
	}
	return s;
}

int Sum_series(int n, ...) //С помощью макросов
{//Первый аргумент содержит счетчик числа аргументов, которые будут переданы функции.
	int s = 0;
	va_list argptr;

	/* инициализация argptr */
	va_start(argptr, n);

	/* сумма последовательности */
	for (; n; n--)
	{
		s += va_arg(argptr, int);
	}

	/* завершение */
	va_end(argptr);
	return s;

}

int Mul(int n, ...) //С помощью указателя
{//Первый аргумент содержит счетчик числа аргументов, которые будут переданы функции.
	//Warning!!! Не корректно работает в x64
	int m = 0;
	for (int i = 1; i <= n; ++i)
	{
		(i==1)?	m = *((&n)+i) : m *= *((&n) + i);
	}
	return m;
}

int Mul_series(int n, ...) //С помощью макросов
{//Первый аргумент содержит счетчик числа аргументов, которые будут переданы функции.
	int m = 0;
	va_list argptr;

	/* инициализация argptr */
	va_start(argptr, n);

	/* Произведение последовательности */
	m = va_arg(argptr, int); //Первый елемент последовательности
	n--;
	for (; n; n--)
	{
		m *= va_arg(argptr, int);
	}

	/* завершение */
	va_end(argptr);
	return m;
}

/*Исполнитель
-----------------------------------------------------
|                                                   |
|   "Компьютерная академия ШАГ"                     |
|   Курс: БД011                                     |
|   Предмет: Основы програмvирования на языке C++   |
|                                                   |
|   Исполнитель: Курицын Алексей                    |
|   Преподаватель: Ковтун Олег                      |
|                                                   |
|   Екатеринбург - 2021                             |
|                                                   |
-----------------------------------------------------*/
