#include<iostream>

void main()
{
	setlocale(LC_ALL, "Russian");

/*
	int a = 2;
	int* pa = &a;

	std::cout << a << std::endl; //значение переменной 'a' на экран
	std::cout << &a << std::endl; //получаем адрес переменной 'a' прямо при выводе на экран
	std::cout << pa << std::endl; //выводим адрес переменной 'a' хронящейся в указателе 'pa'
	std::cout << *pa << std::endl; //оператор разименование (derefference operator)

	int* pb;
	int b;
	pb = &b;
	//(int*) (int*)
	//	*pb = &b;

	const int n = 5;
	int arr[n] = { 3,5,8,13,21 };
	std::cout << arr << std::endl;
	std::cout << *arr << std::endl;

	for (int i = 0; i < n; i++)
	{
		std::cout << *(arr + i) << "\n";
	}

	std::cout << std::endl;
*/

}

/*
Указатель (pointer) - это переменная, которая содержит адрес другой переменной.

Адрес - это число, длинной 4 байта (8 байта для x64) означающее порядковый номер байта в в оперативной памяти.

'&' - унарный оператор, взятия адреса, который возвращает адрес своего операнда.

'*' - унарный оператор, разименования - возвращает значение по адресу.
	при объявлении указателя показывает, что переменная указатель. во всех остальных случаях разыменовывает адрес и возвращает значение по адресу.

	Арифметика указателей
	char* - 1 Byte
	short* - 2 Byte
	int* - 4 Byte
	double* - 8 Byte
*/